from decorators import func_name, timer, decorater_function_1, decorater_function_2


# Напишите функцию, которая вычисляет значение числа Фибоначчи для заданного количество элементов последовательности
# и возвращает его и оберните ее декоратором timer и func_name

@func_name
@timer
def fib(n):
    """
    функцию, которая вычисляет значение числа Фибоначчи для заданного количество элементов последовательности
    :param n: количество элементов последовательности Фибоначчи
    :return: последовательность Фибоначчи
    """
    fib_num = [0, 1]
    i = 2

    while i < n:
        f_sum = fib_num[i - 2] + fib_num[i - 1]
        i = i + 1
        fib_num.append(f_sum)

    return fib_num


# Напишите функцию, которая вычисляет сложное математическое выражение и оберните ее декоратором из пункта 1, 2


@decorater_function_2
@decorater_function_1
def math(x, y):
    """
    функцию, которая вычисляет сложное математическое выражение
    """
    res = 1 / 7 * x ** 3 * y - 2 * x * y ** 2 * (x + y)
    print('результат выражения = ', res)
    return res


function = input('Выберите функцию:\n1) Вычисление последовательности Фибоначчи \n2) Вычисление математического '
                 'выражения\n')

if function == '1':
    n = int(input('Введите количество элементов последовательности Фибоначчи '))
    print('Последовательность Фибоначчи', fib(n))

elif function == '2':
    x = int(input('Введите целое число '))
    y = int(input('Введите целое число '))
    math(x, y)

else:
    print('\nВыберите фунюкци из предложенных в списке. Запустите программу еще раз.')
